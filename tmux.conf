# Shit added by wgiokas
set -g default-terminal "screen-256color"
set -g base-index 1
set -g escape-time 0
set -g default-command zsh
set -g mode-keys vi


# kooothor@flood.fr tmux.conf
# #################
# screen-like setup
# #################

# C-a is escape sequence
unbind C-b
set -g prefix C-b
# Send ^B to a nested session
bind b send-prefix

# vim ftw
# unnecessary because $EDITOR=vim
# setw -g mode-keys vi

# copy pasta #
unbind [
# tab to enter copy mode
bind Tab copy-mode
# v to select
bind-key -t vi-copy 'v' begin-selection
# V for block select
bind-key -t vi-copy 'V' rectangle-toggle
# y to yank
bind-key -t vi-copy 'y' copy-selection
# P to paste
unbind P
bind P paste-buffer

#open man page with /
bind / command-prompt "split-window -h 'exec man %%'"
#bind \ command-prompt "split-window -v 'exec man %%'"
unbind K
bind K command-prompt "split-window -v 'exec man %%'"

# resize pane with arrow keys
# -r: can be repeated without pressing prefix
#     again (500ms after last '-r' action or prefix)
unbind Left
unbind Right
unbind Down
unbind Up
bind -r Left resize-pane -L 2
bind -r Right resize-pane -R 2
bind -r Down resize-pane -D 2
bind -r Up resize-pane -U 2

# new window ^C c 
unbind ^C
bind ^C new-window
bind c new-window

# reload config without killing server
unbind R
bind R source-file ~/.tmux.conf \; display-message "  Config reloaded..."

# detach ^D d
unbind ^D
bind ^D detach

# displays * 
unbind *
bind * list-clients

# lockscreen ^X x 
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# prev ^H ^P p ^? 
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# next ^@ ^N space n 
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# ^A to get to last window
unbind ^B
bind ^B last-window

# windows ^W w 
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# " windowlist -b
unbind '"'
bind '"' choose-window

#quit \ 
#unbind \
#bind \ confirm-before "kill-server"

# kill K k 
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l 
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split -v |
unbind |
bind | split-window -v

# split horizontal
unbind -
bind - split-window -h

# mouse-select-pane [on | off]
# #   If on, tmux captures the mouse and when a window is
# #   split into multiple panes the mouse may be used to
# #   select the current pane.  The mouse click is also
# #   passed through to the application as normal.
# #
set -g mouse-select-pane on

set -g status-utf8 on
set -g window-status-fg blue
set -g pane-active-border-fg blue

set -g window-status-separator " | "

set -g window-status-bg black
set -g window-status-current-fg yellow
set -g window-status-bell-fg blue
set -g window-status-bell-bg black
set -g status-left-length 20
set -g status-right-length 150
set -g status-fg colour231
set -g status-bg colour234

set -g window-status-last-attr bold

set -g status on
set -g status-utf8 on
set -g status-interval 2
set -g status-fg colour231
set -g status-bg colour234
set -g status-left-length 20
set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold]' #|#(eval $POWERLINE_COMMAND tmux left)'
#set -g status-right '#(eval $POWERLINE_COMMAND tmux right -R pane_id=`tmux display -p "#D"`)'
set -g status-right-length 150
set -g window-status-format "#[fg=colour244,bg=colour234]#I #[fg=colour240]| #[fg=colour249]#W "
set -g window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31]#I | #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"
# vim: ft=tmux

bind C-c run "tmux show-buffer | xsel -i -p"
bind C-v run "tmux set-buffer -- \"$(xsel -o -p)\"; tmux paste-buffer"


# vim: set ft=tmux :
